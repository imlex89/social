{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","to","img","src","alt","name","Message","status","message","mesBlock","messageRight","mesBlockRight","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","onClick","onSendMessageClick","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","addMessage","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"yGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,IAAM,qBAAqB,SAAW,0BAA0B,cAAgB,+BAA+B,WAAa,8B,+FCiBrWC,EAdI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACE,yBAAKC,UAAWC,IAAEC,QAChB,kBAAC,IAAD,CAASC,GAAIL,GACX,yBAAKE,UAAWC,IAAEG,KAChB,yBAAKC,IAAKR,EAAMO,IAAKE,IAAKT,EAAMO,IAAKJ,UAAU,UAEjD,2BAAIH,EAAMU,SCiBHC,EA1BC,SAACX,GACf,OACE,6BACoB,IAAjBA,EAAMY,OACP,yBAAKT,UAAS,UAAKC,IAAES,QAAP,UACZ,yBAAKV,UAAWC,IAAEG,KAChB,yBAAKC,IAAKR,EAAMO,IAAKE,IAAKT,EAAMO,OAElC,yBAAKJ,UAAWC,IAAEU,UAChB,2BAAId,EAAMa,WAId,yBAAKV,UAAS,UAAKC,IAAEW,aAAP,UACZ,yBAAKZ,UAAWC,IAAEY,eAChB,2BAAIhB,EAAMa,UAEZ,yBAAKV,UAAWC,IAAEG,KAChB,yBAAKC,IAAKR,EAAMO,IAAKE,IAAKT,EAAMO,U,yCCmBpCU,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAAU,CAAEC,KAAM,wBAAlBD,EAdL,SAACpB,GACtB,OACE,0BAAMsB,SAAUtB,EAAMuB,aAAcpB,UAAU,QAC5C,kBAACqB,EAAA,EAAD,CACEC,UAAWC,IACXhB,KAAK,iBACLiB,SAAU,CAACC,IAAUX,GACrBY,YAAY,uBAEd,4BAAQC,QAAS9B,EAAM+B,oBAAvB,WASSC,EAnDC,SAAChC,GACf,IAAIiC,EAAQjC,EAAMkC,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAACC,GAAD,OACtC,kBAAC,EAAD,CAAY5B,KAAM4B,EAAE5B,KAAMR,GAAIoC,EAAEpC,GAAIK,IAAK+B,EAAE/B,IAAKgC,IAAKD,EAAEpC,QAErDsC,EAAmBP,EAAMQ,SAASJ,KAAI,SAACK,GAAD,OACxC,kBAAC,EAAD,CAAS7B,QAAS6B,EAAE7B,QAASN,IAAKmC,EAAEnC,IAAKgC,IAAKG,EAAExC,GAAIU,OAAQ8B,EAAE9B,YAG3CqB,EAAMU,eAM3B,OAAK3C,EAAM4C,OAGT,6BACE,yBAAKzC,UAAWC,IAAEgC,SAChB,yBAAKjC,UAAWC,IAAEyC,cAAeV,GACjC,yBAAKhC,UAAWC,IAAEqC,UAAWD,IAE/B,yBAAKrC,UAAWC,IAAE0C,YAChB,2CACA,kBAAC3B,EAAD,CAAqBG,SAdP,SAACyB,GACnB/C,EAAMgD,YAAYD,EAAOJ,qBAGD,kBAAC,IAAD,CAAUrC,GAAI,Y,wCCpBtC2C,EAA6B,SAAChB,GAAD,MAAY,CACzCW,OAAQX,EAAMiB,KAAKN,S,OCeRO,sBACXC,aAdkB,SAACnB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACmB,GACtB,MAAO,CACHL,YAAa,SAACL,GACVU,EAASC,YAAmBX,UDPR,SAACY,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAKzD,MAAM4C,OACT,kBAACW,EAAcE,KAAKzD,OADI,kBAAC,IAAD,CAAUM,GAAI,eAHV,GACXoD,IAAMH,WAStC,OAFqCH,YAAQH,EAARG,CAAoCI,KCI9DL,CAGbnB","file":"static/js/4.9182da44.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"messageRight\":\"Dialogs_messageRight__42C0g\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"img\":\"Dialogs_img__3Kx2a\",\"mesBlock\":\"Dialogs_mesBlock__oXT2e\",\"mesBlockRight\":\"Dialogs_mesBlockRight__2eLhL\",\"addMessage\":\"Dialogs_addMessage__1Bihp\"};","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n  return (\n    <div className={s.dialog}>\n      <NavLink to={path}>\n        <div className={s.img}>\n          <img src={props.img} alt={props.img} className='flex' />\n        </div>\n        <p>{props.name}</p>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\n\nconst Message = (props) => {\n  return (\n    <div>\n      {props.status === 1 ? \n      <div className={`${s.message} flex`}>\n        <div className={s.img}>\n          <img src={props.img} alt={props.img} />\n        </div>\n        <div className={s.mesBlock}>\n          <p>{props.message}</p>\n        </div>\n      </div>\n      :\n      <div className={`${s.messageRight} flex`}>\n        <div className={s.mesBlockRight}>\n          <p>{props.message}</p>\n        </div>\n        <div className={s.img}>\n          <img src={props.img} alt={props.img} />\n        </div>\n      </div>\n      }\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Redirect } from \"react-router-dom\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Textarea } from \"../common/FormsControls/FormsControls\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n  let dialogsElements = state.dialogs.map((d) => (\n    <DialogItem name={d.name} id={d.id} img={d.img} key={d.id} />\n  ));\n  let messagesElements = state.messages.map((m) => (\n    <Message message={m.message} img={m.img} key={m.id} status={m.status} />\n  ));\n\n  let newMessageBody = state.newMessageBody;\n\n  let addNewMessage = (values) => {\n    props.sendMessage(values.newMessageBody);\n  };\n\n  if (!props.isAuth) return <Redirect to={\"/login\"} />;\n\n  return (\n    <div>\n      <div className={s.dialogs}>\n        <div className={s.dialogsItems}>{dialogsElements}</div>\n        <div className={s.messages}>{messagesElements}</div>\n      </div>\n      <div className={s.addMessage}>\n        <p>Add message:</p>\n        <AddMessageFormRedux onSubmit={addNewMessage} />\n      </div>\n    </div>\n  );\n};\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit} className=\"flex\">\n      <Field\n        component={Textarea}\n        name=\"newMessageBody\"\n        validate={[required, maxLength50]}\n        placeholder=\"Enter your message\"\n      />\n      <button onClick={props.onSendMessageClick}>Add</button>\n    </form>\n  );\n};\n\nconst AddMessageFormRedux = reduxForm({ form: \"dialogAddMessageForm\" })(\n  AddMessageForm\n);\n\nexport default Dialogs;\n","import {Redirect} from \"react-router-dom\";\nimport React from \"react\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to={\"/login\"} />\n            return <Component {...this.props} />;\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\n\n    return ConnectedAuthRedirectComponent;\n}","import React from \"react\";\nimport {sendMessageCreator} from \"../../redux/reducer/reducer-dialogs\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody));\n        }\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}